services:
  mongo:
    image: mongo
    restart: always
    environment:
    - MONGO_INITDB_ROOT_USERNAME=${MONGO_ROOT_USER}
    - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASS}
    - MONGO_USER=${MONGO_USER}
    - MONGO_PASS=${MONGO_PASS}
    volumes:
      - mongo_data:/data/db
      - ./mongo-init:/docker-entrypoint-initdb.d
    command: mongod --quiet --logpath /dev/null
  photostereo:
    build:
      context: photostereo_server
      args:
        PORT: ${PHOTOSTEREO_PORT}
      dockerfile: Dockerfile
    volumes:
      - ./uploads:/usr/src/uploads
      - ./output:/usr/src/output
    ports:
      - 5000:${PHOTOSTEREO_PORT}
    container_name: photostereo-service
    environment:
      - BACKEND_URI=http://back:${BACK_PORT}/internal
  back:
    build:
      context: backend
      dockerfile: Dockerfile
    volumes:
      - node_modules_back:/usr/src/app/node_modules
      - ./uploads:/usr/src/uploads
      - ./output:/usr/src/output
    container_name: photostereo-back
    environment:
      - MONGODB_URI=mongodb://${MONGO_USER}:${MONGO_PASS}@mongo:27017/
      - PHOTOSTEREO_URI=http://photostereo:${PHOTOSTEREO_PORT}/normal_map
    env_file:
      - .env
    depends_on:
      - mongo
      - photostereo
  front:
    build:
      context: frontend
      dockerfile: Dockerfile
    volumes:
      - node_modules_front:/usr/src/app/node_modules
      - ./frontend/nginx.conf:/etc/nginx/nginx.conf:ro
    container_name: photostereo-front
    env_file:
      - .env
    depends_on:
      - back
  
  nginx:
    image: nginx:1.25
    volumes:
      - ./nginx.conf.template:/etc/nginx/nginx.conf.template:ro
      #- ./ssl:/etc/nginx/ssl:ro #bind ssl certificates
    # ports:
      #- ${PORT}:80 #Expose nginx with assigned port
      #- 443:443 #Expose ssl port
    container_name: reverse-proxy
    env_file:
      - .env
    command: /bin/bash -c "envsubst < /etc/nginx/nginx.conf.template > /etc/nginx/nginx.conf && nginx -g 'daemon off;'"
    depends_on:
      - front
      - back
      - photostereo
  
  cloudflared: #Comment out if not using cloudflare
    image: cloudflare/cloudflared:2025.2.0
    restart: unless-stopped
    volumes:
      - ./cloudflared-config.yml:/cloudflared-config.yml
      - ./cloudflared-credentials.json:/cloudflared-credentials.json
    command: tunnel --no-autoupdate --config=/cloudflared-config.yml run
    depends_on:
      - nginx

volumes:
  node_modules_back:
  node_modules_front:
  mongo_data: